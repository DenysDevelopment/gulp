@function prc($pxOne, $pxTwo) {
  @return #{$pxOne} / #{$pxTwo} * 100;
}
@function rem($px) {
  @return #{$px} / 16 + rem;
}
@function em($px) {
  @return #{$px} / 16 + em;
}

@mixin adaptiv-value($property, $startSize, $minSize, $type: 1) {
  $addSize: $startSize - $minSize;
  @if $type == 1 {
    // only if < container
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} *
          ((100vw - 320px) / #{$maxWidthContainer - 320})
      );
    }
  } @else if $type == 2 {
    // only if > container
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
      );
    }
  } @else {
    //always
    #{$property}: calc(
      #{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
    );
  }
}

$maxWidthContainer: 1920;
@mixin adaptivValue($property, $startSize, $minSize, $type: 1) {
  $addSize: $startSize - $minSize;

  #{$property}: $startSize + px;
  @media (max-width: #{$maxWidthContainer + px}) {
    #{$property}: calc(
      #{$minSize + px} + #{$addSize} *
        ((100vw - 320px) / #{$maxWidthContainer - 320})
    );
  }
}
